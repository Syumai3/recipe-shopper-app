// データベースの接続情報
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// generateコマンドで生成するものを指定
generator client {
  provider = "prisma-client-js"
}

// アプリケーションで使用するモデル

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  recipes   Recipe[]
  menus     Menu[]
}

model Recipe {
  id                Int                @id @default(autoincrement())
  userId            Int
  name              String
  imageUrl          String?
  description       String?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  user              User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipeIngredients RecipeIngredient[]
  menuItems         MenuItem[]
}

model Ingredient {
  id                Int                @id @default(autoincrement())
  name              String
  unit              String
  category          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  recipeIngredients RecipeIngredient[]
  shoppingListItems ShoppingListItem[]
}

model RecipeIngredient {
  id           Int        @id @default(autoincrement())
  recipeId     Int
  ingredientId Int
  quantity     Float
  unit         String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
}

model Menu {
  id           Int            @id @default(autoincrement())
  userId       Int
  startDate    DateTime
  endDate      DateTime
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  user         User           @relation(fields: [userId], references: [id])
  menuItems    MenuItem[]
  shoppingList ShoppingList[]
}

model MenuItem {
  id          Int         @id @default(autoincrement())
  menuId      Int
  recipeId    Int
  dayOfWeek   DayOfWeek
  mealSection MealSection
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  recipe      Recipe      @relation(fields: [recipeId], references: [id])
  menu        Menu        @relation(fields: [menuId], references: [id])
}

model ShoppingList {
  id                Int                @id @default(autoincrement())
  menuId            Int
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  menu              Menu               @relation(fields: [menuId], references: [id])
  shoppingListItems ShoppingListItem[]
}

model ShoppingListItem {
  id             Int          @id @default(autoincrement())
  shoppingListId Int
  ingredientId   Int
  quantity       Float
  unit           String
  isChecked      Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  shoppingList   ShoppingList @relation(fields: [shoppingListId], references: [id])
  ingredient     Ingredient   @relation(fields: [ingredientId], references: [id])
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum MealSection {
  BREAKFAST
  LUNCH
  DINNER
}
